AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Lambda application that calls the Lambda API.
Resources:
  # user: 
  #   Type: AWS::IAM::User
  #   Properties:
  #     Path: '/'
  #     UserName: telegram-user
  #     LoginProfile: 
  #       Password: "pa$$W0rd"
  #       PasswordResetRequired: true        
  #     Policies: 
  #       - PolicyName: telegram-bot
  #         PolicyDocument:
  #           Version: '2012-10-17'
  #           Statement:
  #             - Sid: updateDatabaseSQSFullAccess
  #               Resource: 
  #                 - '*'
  #               Effect: Allow
  #               Action:
  #                 - 's3:*'
  #                 - 'sqs:*'
  #                 - 'lamda:*'
  #                 - 'dynamodb:*'
  telegramWebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: telegramWebhook
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: build/functions/telegramWebhook/.
      Description: Telegram bot webhook
      Timeout: 10
      FunctionUrlConfig:
        AuthType: NONE
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - AWSLambdaDynamoDBExecutionRole
        - AmazonDynamoDBReadOnlyAccess
      Tracing: Active
  updateDatabaseFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: updateDatabase
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: build/functions/updateDatabase/.
      Description: YGO TCG card database update
      Timeout: 10
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambda_ReadOnlyAccess
        - DatabaseAdministrator
      Events:
        SQSEvent:
          Type: SQS
          Properties: 
            BatchSize: 10
            Enabled: true
            Queue: !GetAtt updateDatabaseSQS.Arn
            ScalingConfig:
              MaximumConcurrency: 10
      Tracing: Active
  updateDatabaseSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: updateDatabaseSQS
  updateDatabaseSQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - SQS:SendMessage
              - SQS:ReceiveMessage
            Effect: Allow
            Principal:
              AWS:
                - <USER>
            Resource: !GetAtt updateDatabaseSQS.Arn
      Queues:
        - !Ref updateDatabaseSQS
